namespace Code
{
    /// <summary>
    /// 3270. Find the Key of the Numbers
    /// 
    /// You are given three positive integers num1, num2, and num3.
    /// 给定三个正整数num1 、 num2和num3 。
    /// 
    /// The key of num1, num2, and num3 is defined as a four-digit number such that:
    /// num1 、 num2和num3的key被定义为一个四位数字，如下所示：
    /// 
    /// Initially, if any number has less than four digits, it is padded with leading zeros.
    /// 最初，如果任何数字少于四位，则用前导零填充。
    /// 
    /// The ith digit (1 <= i <= 4) of the key is generated by taking the smallest digit among the ith digits of num1, num2, and num3.
    /// key的i th位（ 1 <= i <= 4 ）是通过取num1 、 num2和num3的i th位中最小的一位生成的。
    /// 
    /// Return the key of the three numbers without leading zeros (if any).
    /// 返回不带前导零的三个数字的key （如果有）。
    /// 
    /// </summary>
    public class GenerateKey
    {
        public int Solution(int num1, int num2, int num3)
        {
            int ans = 0;
            for (var i = 0; i < 4; i++)
            {
                int mul1 = (int)Math.Pow(10, i + 1);
                int mul2 = (int)Math.Pow(10, i);
                int n1 = num1 % mul1 / mul2;
                int n2 = num2 % mul1 / mul2;
                int n3 = num3 % mul1 / mul2;
                ans += new int[] { n1, n2, n3 }.Min() * mul2;
            }
            return ans;
        }
    }
}
